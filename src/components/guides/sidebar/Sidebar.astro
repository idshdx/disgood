---
import type { GuidePage, GuideSectionPage } from "@/types/guides";
import { getLanguageFromUrl } from "@/utils/i18n";

import SidebarSectionDropdown from "./SidebarSectionDropdown.astro";

interface Props {
  class: string;
}

const { class: className } = Astro.props;
const language = getLanguageFromUrl(Astro.url);
const allGuides = (await Astro.glob("../../../pages/*/guides/*/*")) as GuidePage[];

const sections = allGuides
  .filter((page) => page.frontmatter.section_weight && page.url?.includes(language.code + "/guides"))
  .sort((a, b) => b.frontmatter.section_weight! - a.frontmatter.section_weight!);
---

<aside
  aria-label="Guides navigation"
  class={`flex flex-col absolute w-full lg:w-1/4 lg:static right-0 lg:right-auto overflow-auto bg-tertiary dark:bg-tertiary-dark py-4 font-robotomono ${className}`}
>
  {
    sections.map((section) => {
      const childPages = allGuides
        .filter((page) => page.url?.includes(section.url!))
        .sort((a, b) => a.frontmatter.weight - b.frontmatter.weight);

      return <SidebarSectionDropdown section={section as GuideSectionPage} sectionPages={childPages as GuidePage[]} />;
    })
  }
</aside>
