---
import { textToHeadingId } from "@utils/heading";
import { Icon } from "astro-icon/components";

interface ResourceItem {
  name: string;
  link: string;
  custom_title?: string;
  author?: string;
}

interface Props {
  title: string;
  items: ResourceItem[];
}

const { title, items } = Astro.props;

const headingId = await textToHeadingId({
  text: title,
  prefix: "resource-"
});
---

<section class="w-full">
  <details class="group">
    <summary
      class="flex justify-between rounded-lg border-2 border-black border-opacity-10 bg-black bg-opacity-0 p-4 hover:border-opacity-0 hover:bg-opacity-5 group-open:mb-3 group-open:border-opacity-0 group-open:bg-opacity-[.15] motion-safe:transition-all dark:border-white dark:border-opacity-10 dark:bg-white dark:bg-opacity-0"
    >
      <header>
        <h3 id={headingId}>{title}</h3>
      </header>

      <span>
        <Icon
          name="mdi:chevron-up"
          class="h-7 w-7 group-open:rotate-180 motion-safe:transition-all motion-safe:duration-200 motion-safe:ease-out"
          role="img"
          aria-label="Dropbown button icon"
        />
      </span>
    </summary>
    <ul class="-mt-3 p-4">
      {
        items.map((item) => {
          return (
            <li class="list-none" title={item.custom_title}>
              <a href={item.link} class="text-lg font-medium">
                {item.name}
              </a>
              {item.author && (
                <p aria-label="Author" class="opacity-70">
                  {item.author}
                </p>
              )}
            </li>
          );
        })
      }
    </ul>
  </details>
</section>
